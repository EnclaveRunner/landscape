services:
  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    restart: unless-stopped
    expose:
      - 3000
    ports:
      - 3000:3000
    volumes:
      - ./enclData/grafana:/var/lib/grafana
      - ./provisioning:/etc/grafana/provisioning
    user: "1000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_ANALYTICS_ENABLED=false
    networks:
      - internal

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./enclData/prometheus:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
      - "--web.enable-admin-api"
    expose:
      - 9090
    ports:
      - 9090:9090
    user: "1000"
    networks:
      - internal

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    expose:
      - 8080
    ports:
      - 8080:8080
    networks:
      - internal

  loki:
    restart: unless-stopped
    container_name: loki
    image: grafana/loki:latest
    expose:
      - 3100
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki-config.yml:/etc/loki/local-config.yaml
      - ./enclData/loki:/tmp/loki
    user: "1000"
    networks:
      - internal

  alloy:
    restart: unless-stopped
    container_name: alloy
    hostname: alloy
    image: grafana/alloy:latest
    expose:
      - 12345
    ports:
      - 12345:12345
    command: "run --server.http.listen-addr=0.0.0.0:12345 --disable-reporting /etc/alloy/config.alloy"
    volumes:
      - ./config.alloy:/etc/alloy/config.alloy
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - internal

  postgres:
    image: postgres:18-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=enclave_db
      - POSTGRES_USER=enclave_user
      - POSTGRES_PASSWORD=enclave_password
    volumes:
      - ./enclData/postgres:/var/lib/postgresql/data
    expose:
      - 5432
    ports:
      - 5432:5432
    networks:
      - internal

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
      - PGADMIN_CONFIG_CHECK_EMAIL_DELIVERABILITY=False
    volumes:
      - ./enclData/pgadmin:/var/lib/pgadmin
      - ./pgadmin-servers.json:/pgadmin4/servers.json:ro
    expose:
      - 80
    ports:
      - 5050:80
    depends_on:
      - postgres
    networks:
      - internal

  redis:
    image: redis:8-alpine
    container_name: redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - ./enclData/redis:/data
    expose:
      - 6379
    ports:
      - 6379:6379
    networks:
      - internal

  api-server:
    image: ghcr.io/enclaverunner/api-server:0.4.0
    container_name: api-server
    restart: unless-stopped
    volumes:
      - ./api-server.yaml:/etc/enclave/config.yaml
    expose:
      - 8081
    ports:
      - 8081:8080
    networks:
      - internal
    depends_on:
      - postgres

  web-ui:
    image: ghcr.io/enclaverunner/web-ui:0.1
    container_name: web-ui
    ports:
      - "8083:8091"
    environment:
      - API_BASE_URL=api-server
      - API_PORT=8080
    networks:
      - internal

networks:
  internal:
